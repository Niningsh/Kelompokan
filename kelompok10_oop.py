# -*- coding: utf-8 -*-
"""Kelompok10_OOP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ra7A4NRdrl0N1OB787AGtR5gxIhUMxsg
"""

kelompok_10 = ["Selamat Datang di Kelompok 10",
               "1. Nindya Permatasari",
               "2. Dina Oktavia",
               "3. Nurul Badriyah",
               "4. Nining Solikhah"]
for anggota in kelompok_10:
  print(anggota)

"""Buatlah sebuah program untuk menghitung luas n bangun datar yang terdiri dari:
1.	Persegi
2.	Persegi panjang
3.	Segitiga
4.	Lingkaran (gunakan 3.14 untuk nilai pi)
5.	Trapesium
Permintaan masukan harus disesuaikan dengan bangun datar yang akan dihitung luasnya, e.g. jika persegi, maka program hanya akan meminta satu masukan, i.e. sisi. Setelah didapatkan n luas bangun datar, urutkan luas bangun datar dari terkecil hingga terbesar dan hitung total luas bangun datar tersebut!


Buatlah penyelesaian kasus tersebut dalam paradigma pemrograman berorientasi objek!

"""

!  pip install pillow

from PIL import Image
img = Image.open('FlowchartBangunDatar.png')
img

from PIL import Image
img = Image.open('pseudocode1.png')
img

from PIL import Image
img = Image.open('pseudocode2.png')
img

class BangunDatar:
    def hitung_luas(self):
        pass

class Persegi(BangunDatar):
    def __init__(self, sisi):
        self.sisi = sisi

    def hitung_luas(self):
        return self.sisi ** 2

class PersegiPanjang(BangunDatar):
    def __init__(self, panjang, lebar):
        self.panjang = panjang
        self.lebar = lebar

    def hitung_luas(self):
        return self.panjang * self.lebar

class Segitiga(BangunDatar):
    def __init__(self, alas, tinggi):
        self.alas = alas
        self.tinggi = tinggi

    def hitung_luas(self):
        return 0.5 * self.alas * self.tinggi

class Lingkaran(BangunDatar):
    def __init__(self, jari_jari):
        self.jari_jari = jari_jari

    def hitung_luas(self):
        return 3.14 * self.jari_jari ** 2

class Trapesium(BangunDatar):
    def __init__(self, sisi_atas, sisi_bawah, tinggi):
        self.sisi_atas = sisi_atas
        self.sisi_bawah = sisi_bawah
        self.tinggi = tinggi

    def hitung_luas(self):
        return 0.5 * (self.sisi_atas + self.sisi_bawah) * self.tinggi

# Input dari pengguna
n = int(input("Jumlah bangun datar yang akan dihitung luasnya: "))
bangun_datar_dict = {}  # Menggunakan dictionary untuk mengaitkan jenis bidang dengan luasnya

# Meminta masukan sesuai dengan jenis bangun datar
for i in range(n):
    print(f"Bangun Datar ke-{i + 1}:")
    jenis_bangun = input("Jenis bangun datar (persegi/persegi panjang/segitiga/lingkaran/trapesium): ").lower()

    if jenis_bangun == "persegi":
        sisi = float(input("Masukkan panjang sisi: "))
        bangun = Persegi(sisi)
    elif jenis_bangun == "persegi panjang":
        panjang = float(input("Masukkan panjang: "))
        lebar = float(input("Masukkan lebar: "))
        bangun = PersegiPanjang(panjang, lebar)
    elif jenis_bangun == "segitiga":
        alas = float(input("Masukkan alas: "))
        tinggi = float(input("Masukkan tinggi: "))
        bangun = Segitiga(alas, tinggi)
    elif jenis_bangun == "lingkaran":
        jari_jari = float(input("Masukkan jari-jari: "))
        bangun = Lingkaran(jari_jari)
    elif jenis_bangun == "trapesium":
        sisi_atas = float(input("Masukkan panjang sisi atas: "))
        sisi_bawah = float(input("Masukkan panjang sisi bawah: "))
        tinggi = float(input("Masukkan tinggi: "))
        bangun = Trapesium(sisi_atas, sisi_bawah, tinggi)
    else:
        print("Jenis bangun datar tidak ada.")
        continue

    luas = bangun.hitung_luas()
    bangun_datar_dict[jenis_bangun] = luas  # Menambahkan jenis bangun dan luasnya ke dictionary

# Menghitung luas bangun datar
print("\nLuas Bangun Datar:")
for i, (jenis_bangun, luas) in enumerate(bangun_datar_dict.items(), start=1):
    print(f"{i}.{jenis_bangun}, Luas: {luas}")

# Menampilkan hasil pengurutan bersama dengan jenis bidang
print("\nHasil Pengurutan Luas Bangun Datar(Ascending):")
bangun_datar_sorted = sorted(bangun_datar_dict.items(), key=lambda x: x[1])
for i, (jenis_bangun, luas) in enumerate(bangun_datar_sorted, start=1):
    print(f"{i}.{jenis_bangun}, Luas: {luas}")

# Menghitung Total Luas
total_luas = sum(bangun_datar_dict.values())
print(f"\nTotal Luas Semua Bangun Datar: {total_luas}")